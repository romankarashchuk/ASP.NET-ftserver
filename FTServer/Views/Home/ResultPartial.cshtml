@model ResultPartialModel

@{
    //Model.pageCount = 2;
    Model.Init();
}
  
<div id='@Html.Raw( "ldiv" + @Model.IdToString() )'>
 @{ 
     var pages = Model.pages;
     var isFirstLoad = Model.isFirstLoad;
     var pageCount = Model.pageCount;

                     foreach (var p in pages) {
                        String content = null;
                         bool isdesc = false;
                        if ( p.keyWord == null) {
                        	content = p.description + "...";
                            content += p.content;                        
                             
                        } else if (p.id != p.keyWord.I) {
                            content = p.description;
                            if (content.Length < 20) {
                                content += p.getRandomContent();
                            }
                              isdesc = true;
                        } else {
                            content = IndexAPI.engine.getDesc(p.content.ToString(), p.keyWord, 80); 
                            if (content.Length < 100) {
                                content += p.getRandomContent();
                            }
                            if (content.Length < 100) {
                                content += p.description;
                            }
                            if (content.Length > 200) {
                                content = content.Substring(0, 200) + "..";
                            }
                           
                        }

<h3><div class="spartcss"><a class="stext" target="_blank"   href="@p.url" >@p.title</a></div></h3> 
<span class="stext"> @content </span>

  var css = isdesc ? "gt" : "gtt";

 <div class="@css">
    @if(p.isAnd) { 
    } else {
      <text>*</text>
    }
    @p.url 
</div>
                
 }
}
</div>
                
 <div class="ui teal message" id='@Html.Raw("s" + @Model.IdToString())'>
    @{
       String tcontent = (DateTime.Now - Model.begin).TotalSeconds + "s, "
                            + "MEM:" + (System.GC.GetTotalMemory(false) / 1024 / 1024) + "MB ";
    
    @: @Model.Query,  TIME: @tcontent,
      <a href="#btnsearch" ><b>
        @if (!@Model.IsEnd()){
             @:"HEAD" 
        }else{
             @:"END"
        }      
      </b></a> 
    }       
</div>            

<script>
    setTimeout(function () {
        highlight( '@Html.Raw( "ldiv" + @Model.IdToString() )' ); 
     @if (!@Model.IsEnd()) {
        //startId is a big number, in javascript, have to write big number as a 'String'
        @: onscroll_loaddiv('@Html.Raw( "s" + @Model.IdToString() )', '@Model.IdToString()');
     }
    }, 100);
     extitle = "@Html.Raw(@Model.ToKeyWordString())";
</script>      
      